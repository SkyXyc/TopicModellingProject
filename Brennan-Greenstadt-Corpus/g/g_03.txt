The development team has a responsibility first lies with meeting the customers requirements and making a usable product. If the development team intentionally adds something to the program to cause harm, then they would be ethically responsible. 
The SoDIS system, Software Development Impact Statement, receives some praise from Gotterbarn because it allows developers to monitor the effects of each part of a project and therefore allows the team to target specialized ethical issues that they may encounter. Gotterbarn supports using the SoDIS system in each step of the programming process to allow the development team to observe both high level ethical issues and the ethical issues encountered within each process. SoDIS allows users to select stakeholders and track the effect of the project on each individual stakeholder.
By including ethical issues in the category of risks that a development team should consider, Gotterbarn expands the definition of software risk. He also places the assessment of ethical issues squarely on the shoulders of the development team. Godderban fails to assign any ethical analysis to the customer, who will be using the project. The consumer being the end user needs to have more of a share in the ethical responsibility. On sum an analysis it consistently follows that the United States government does not have any ethical responsibility in the dropping of the atom bomb because the engineering team failed to take into account the aftermath it would cause. Also, his analysis does not take into account that if the developers do not provide the customer with what they want, the customer will go elsewhere.
Gotterbarn uses the Aegis example, which had a poor user interface and lead to the shooting down of a commercial airliner, to support his theory that the â€˜stakeholders' in software development are often poorly defined. While the system met the requirements, Gotterbarn argues that this constitutes a failure in design. Gotterbarn fails to take into account the responsibility of the customer. The customer should have reviewed the design concept and deemed it to complicated, then the development teem would have known the product did not meet the specifications and been able to improve it. Failures by the customer to provide good requirements also bear the burden of what Gotterbarn considers a software failure. 
Gotterbarn also argues that the people affected by the falling debris from a Patriot missile should be considers as stakeholders by the software developer. What Gotterbarn fails to take into account is that the customer specifically requested a program for missile defense by the United States Navy and is also used by several other Navies, which by definition will launch missiles and have debris. This may be a side effect of the program, but this is ethical responsibility should fall on the customer who is requesting a program that will enhance their ability to launch the missile.
The problem with the SoDIS system is that again it forces the development team to take into account all of the stakeholders of the project. 
